#!/bin/bash

PACKAGES="openstack-dashboard python-keystoneclient
          openstackx python-memcache memcached"
LOCAL_SETTINGS="/usr/share/openstack-dashboard/local/local_settings.py"
LOCAL_SETTING_COMPILED="${LOCAL_SETTINGS}c"

function add_ppa() {
  PPA=$(config-get horizon-release)
  if [[ "${PPA:0:4}" == "ppa:" ]] ; then
    juju-log "nova: Configuring installation from custom PPA ($PPA)"
    add-apt-repository -y "$PPA" || exit 1
    return
  fi
  if [[ "${PPA:0:3}" == "deb" ]] ; then
    juju-log "nova: Configuring installation from custom PPA URL ($PPA)"
    if echo "$PPA" | grep -q "|" ; then
      # gpg key id tagged to end of url folloed by a |
      url=$(echo $PPA | cut -d'|' -f1)
      key=$(echo $PPA | cut -d'|' -f2)
      if [[ -n "$key" ]] ; then
        juju-log "Importing repository key: $key"
        apt-key adv --keyserver keyserver.ubuntu.com --recv-keys "$key" || \
          juju-log "WARN: Could not import key from keyserver: $key"
      else
        juju-log "No repository key specified"
        url="$PPA"
      fi
      add-apt-repository -y "$url"
    fi
    return
  fi
  juju-log "nova: No PPA specified. Falling back to installation from Ubuntu archive."

}

# NOTE: local_settings.py is a python module, it really sucks
# to manage this via sed.  In the future this should be changed
# to some template mechanism or managing config variables via
# a seperate module in /etc/openstack-dashboard/ that could be
# imported and used in local_settings.  We've got some work todo
# in packaging for this as well. adam_g 12/23/11
set_or_update() {
  # set a key = value option in $LOCAL_SETTINGS
  local key=$1 value=$2
  [[ -z "$key" ]] || [[ -z "$value" ]] &&
    juju-log "set_or_update: ERROR - missing parameters" && return 1
  grep -q "^$key = \"$value\"" "$LOCAL_SETTINGS" &&
    juju-log "set_or_update: $key = $value already set" && return 0
  if grep -q "^$key = " "$LOCAL_SETTINGS" ; then
    juju-log "set_or_update: Setting $key = $value"
    cp "$LOCAL_SETTINGS" /var/lib/juju/dashboard-local_settings.py.last
    sed -i "s|\(^$key = \).*|\1\"$value\"|g" "$LOCAL_SETTINGS" || return 1
  else
    juju-log "set_or_update: Adding $key = $value"
    echo "$key = \"$value\"" >>$LOCAL_SETTINGS || return 1
  fi 
  [[ -e $LOCAL_SETTINGS_COMPILED ]] && rm -rf $LOCAL_SETTINGS_COMPILED
  return 0
}
